{"ast":null,"code":"import React,{useEffect}from'react';import{connect}from'react-redux';import{getGithubRepos}from'../../actions/profile';var ProfileGithub=function ProfileGithub(_ref){var username=_ref.username,getGithubRepos=_ref.getGithubRepos,repos=_ref.repos;useEffect(function(){getGithubRepos(username);},[getGithubRepos,username]);return/*#__PURE__*/React.createElement(\"div\",{className:\"profile-github\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"text-primary my-1\"},\"Github Repos\"),repos.map(function(repo){return/*#__PURE__*/React.createElement(\"div\",{key:repo.id,className:\"repo bg-white p-1 my-1\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h4\",null,/*#__PURE__*/React.createElement(\"a\",{href:repo.html_url,target:\"_blank\",rel:\"noopener noreferrer\"},repo.name)),/*#__PURE__*/React.createElement(\"p\",null,repo.description)),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(\"li\",{className:\"badge badge-primary\"},\"Stars: \",repo.stargazers_count),/*#__PURE__*/React.createElement(\"li\",{className:\"badge badge-dark\"},\"Watchers: \",repo.watchers_count),/*#__PURE__*/React.createElement(\"li\",{className:\"badge badge-light\"},\"Forks: \",repo.forks_count))));}));};var mapStateToProps=function mapStateToProps(state){return{repos:state.profile.repos};};export default connect(mapStateToProps,{getGithubRepos:getGithubRepos})(ProfileGithub);","map":{"version":3,"sources":["/Users/zhichengqian/Desktop/Project/ReactProject/MERN/mern/client/src/components/profile/ProfileGithub.js"],"names":["React","useEffect","connect","getGithubRepos","ProfileGithub","username","repos","map","repo","id","html_url","name","description","stargazers_count","watchers_count","forks_count","mapStateToProps","state","profile"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CAEA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,cAAT,KAA+B,uBAA/B,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAyC,IAAtCC,CAAAA,QAAsC,MAAtCA,QAAsC,CAA5BF,cAA4B,MAA5BA,cAA4B,CAAZG,KAAY,MAAZA,KAAY,CAC3DL,SAAS,CAAC,UAAM,CACZE,cAAc,CAACE,QAAD,CAAd,CACH,CAFQ,CAEN,CAACF,cAAD,CAAiBE,QAAjB,CAFM,CAAT,CAIA,mBACI,2BAAK,SAAS,CAAC,gBAAf,eACI,0BAAI,SAAS,CAAC,mBAAd,iBADJ,CAEKC,KAAK,CAACC,GAAN,CAAU,SAAAC,IAAI,qBACX,2BAAK,GAAG,CAAEA,IAAI,CAACC,EAAf,CAAmB,SAAS,CAAC,wBAA7B,eACI,4CACI,2CACI,yBAAG,IAAI,CAAED,IAAI,CAACE,QAAd,CAAwB,MAAM,CAAC,QAA/B,CAAwC,GAAG,CAAC,qBAA5C,EACKF,IAAI,CAACG,IADV,CADJ,CADJ,cAMI,6BAAIH,IAAI,CAACI,WAAT,CANJ,CADJ,cASI,4CACI,2CACI,0BAAI,SAAS,CAAC,qBAAd,YACYJ,IAAI,CAACK,gBADjB,CADJ,cAII,0BAAI,SAAS,CAAC,kBAAd,eACeL,IAAI,CAACM,cADpB,CAJJ,cAOI,0BAAI,SAAS,CAAC,mBAAd,YAA0CN,IAAI,CAACO,WAA/C,CAPJ,CADJ,CATJ,CADW,EAAd,CAFL,CADJ,CA4BH,CAjCD,CAyCA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAC9BX,KAAK,CAAEW,KAAK,CAACC,OAAN,CAAcZ,KADS,CAAL,EAA7B,CAIA,cAAeJ,CAAAA,OAAO,CAACc,eAAD,CAAkB,CAAEb,cAAc,CAAdA,cAAF,CAAlB,CAAP,CAA6CC,aAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getGithubRepos } from '../../actions/profile';\n\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\n    useEffect(() => {\n        getGithubRepos(username);\n    }, [getGithubRepos, username]);\n\n    return (\n        <div className=\"profile-github\">\n            <h2 className=\"text-primary my-1\">Github Repos</h2>\n            {repos.map(repo => (\n                <div key={repo.id} className=\"repo bg-white p-1 my-1\">\n                    <div>\n                        <h4>\n                            <a href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\n                                {repo.name}\n                            </a>\n                        </h4>\n                        <p>{repo.description}</p>\n                    </div>\n                    <div>\n                        <ul>\n                            <li className=\"badge badge-primary\">\n                                Stars: {repo.stargazers_count}\n                            </li>\n                            <li className=\"badge badge-dark\">\n                                Watchers: {repo.watchers_count}\n                            </li>\n                            <li className=\"badge badge-light\">Forks: {repo.forks_count}</li>\n                        </ul>\n                    </div>\n                </div>\n            ))}\n        </div>\n    );\n};\n\nProfileGithub.propTypes = {\n    getGithubRepos: PropTypes.func.isRequired,\n    repos: PropTypes.array.isRequired,\n    username: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n    repos: state.profile.repos\n});\n\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);\n"]},"metadata":{},"sourceType":"module"}
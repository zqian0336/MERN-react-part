{"ast":null,"code":"import _regeneratorRuntime from\"/Users/zhichengqian/Desktop/Project/ReactProject/MERN/mern/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/zhichengqian/Desktop/Project/ReactProject/MERN/mern/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import api from'../utils/api';import{setAlert}from'./alert';import{GET_POSTS,POST_ERROR,UPDATE_LIKES,DELETE_POST,ADD_POST,GET_POST,ADD_COMMENT,REMOVE_COMMENT}from'./types';// Get posts\nexport var getPosts=function getPosts(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return api.get('/posts');case 3:res=_context.sent;dispatch({type:GET_POSTS,payload:res.data});_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);dispatch({type:POST_ERROR,payload:{msg:_context.t0.response.statusText,status:_context.t0.response.status}});case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));return function(_x){return _ref.apply(this,arguments);};}();};// Add like\nexport var addLike=function addLike(id){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return api.put(\"/posts/like/\".concat(id));case 3:res=_context2.sent;dispatch({type:UPDATE_LIKES,payload:{id:id,likes:res.data}});_context2.next=10;break;case 7:_context2.prev=7;_context2.t0=_context2[\"catch\"](0);dispatch({type:POST_ERROR,payload:{msg:_context2.t0.response.statusText,status:_context2.t0.response.status}});case 10:case\"end\":return _context2.stop();}}},_callee2,null,[[0,7]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};// Remove like\nexport var removeLike=function removeLike(id){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var res;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return api.put(\"/posts/unlike/\".concat(id));case 3:res=_context3.sent;dispatch({type:UPDATE_LIKES,payload:{id:id,likes:res.data}});_context3.next=10;break;case 7:_context3.prev=7;_context3.t0=_context3[\"catch\"](0);dispatch({type:POST_ERROR,payload:{msg:_context3.t0.response.statusText,status:_context3.t0.response.status}});case 10:case\"end\":return _context3.stop();}}},_callee3,null,[[0,7]]);}));return function(_x3){return _ref3.apply(this,arguments);};}();};// Delete post\nexport var deletePost=function deletePost(id){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return api.delete(\"/posts/\".concat(id));case 3:dispatch({type:DELETE_POST,payload:id});dispatch(setAlert('Post Removed','success'));_context4.next=10;break;case 7:_context4.prev=7;_context4.t0=_context4[\"catch\"](0);dispatch({type:POST_ERROR,payload:{msg:_context4.t0.response.statusText,status:_context4.t0.response.status}});case 10:case\"end\":return _context4.stop();}}},_callee4,null,[[0,7]]);}));return function(_x4){return _ref4.apply(this,arguments);};}();};// Add post\nexport var addPost=function addPost(formData){return/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch){var res;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.prev=0;_context5.next=3;return api.post('/posts',formData);case 3:res=_context5.sent;dispatch({type:ADD_POST,payload:res.data});dispatch(setAlert('Post Created','success'));_context5.next=11;break;case 8:_context5.prev=8;_context5.t0=_context5[\"catch\"](0);dispatch({type:POST_ERROR,payload:{msg:_context5.t0.response.statusText,status:_context5.t0.response.status}});case 11:case\"end\":return _context5.stop();}}},_callee5,null,[[0,8]]);}));return function(_x5){return _ref5.apply(this,arguments);};}();};// Get post\nexport var getPost=function getPost(id){return/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(dispatch){var res;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.prev=0;_context6.next=3;return api.get(\"/posts/\".concat(id));case 3:res=_context6.sent;dispatch({type:GET_POST,payload:res.data});_context6.next=10;break;case 7:_context6.prev=7;_context6.t0=_context6[\"catch\"](0);dispatch({type:POST_ERROR,payload:{msg:_context6.t0.response.statusText,status:_context6.t0.response.status}});case 10:case\"end\":return _context6.stop();}}},_callee6,null,[[0,7]]);}));return function(_x6){return _ref6.apply(this,arguments);};}();};// Add comment\nexport var addComment=function addComment(postId,formData){return/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(dispatch){var res;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.prev=0;_context7.next=3;return api.post(\"/posts/comment/\".concat(postId),formData);case 3:res=_context7.sent;dispatch({type:ADD_COMMENT,payload:res.data});dispatch(setAlert('Comment Added','success'));_context7.next=11;break;case 8:_context7.prev=8;_context7.t0=_context7[\"catch\"](0);dispatch({type:POST_ERROR,payload:{msg:_context7.t0.response.statusText,status:_context7.t0.response.status}});case 11:case\"end\":return _context7.stop();}}},_callee7,null,[[0,8]]);}));return function(_x7){return _ref7.apply(this,arguments);};}();};// Delete comment\nexport var deleteComment=function deleteComment(postId,commentId){return/*#__PURE__*/function(){var _ref8=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(dispatch){return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:_context8.prev=0;_context8.next=3;return api.delete(\"/posts/comment/\".concat(postId,\"/\").concat(commentId));case 3:dispatch({type:REMOVE_COMMENT,payload:commentId});dispatch(setAlert('Comment Removed','success'));_context8.next=10;break;case 7:_context8.prev=7;_context8.t0=_context8[\"catch\"](0);dispatch({type:POST_ERROR,payload:{msg:_context8.t0.response.statusText,status:_context8.t0.response.status}});case 10:case\"end\":return _context8.stop();}}},_callee8,null,[[0,7]]);}));return function(_x8){return _ref8.apply(this,arguments);};}();};","map":{"version":3,"sources":["/Users/zhichengqian/Desktop/Project/ReactProject/MERN/mern/client/src/actions/post.js"],"names":["api","setAlert","GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","GET_POST","ADD_COMMENT","REMOVE_COMMENT","getPosts","dispatch","get","res","type","payload","data","msg","response","statusText","status","addLike","id","put","likes","removeLike","deletePost","delete","addPost","formData","post","getPost","addComment","postId","deleteComment","commentId"],"mappings":"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","sourcesContent":["import api from '../utils/api';\nimport { setAlert } from './alert';\nimport {\n    GET_POSTS,\n    POST_ERROR,\n    UPDATE_LIKES,\n    DELETE_POST,\n    ADD_POST,\n    GET_POST,\n    ADD_COMMENT,\n    REMOVE_COMMENT\n} from './types';\n\n// Get posts\nexport const getPosts = () => async dispatch => {\n    try {\n        const res = await api.get('/posts');\n\n        dispatch({\n            type: GET_POSTS,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n// Add like\nexport const addLike = id => async dispatch => {\n    try {\n        const res = await api.put(`/posts/like/${id}`);\n\n        dispatch({\n            type: UPDATE_LIKES,\n            payload: { id, likes: res.data }\n        });\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n// Remove like\nexport const removeLike = id => async dispatch => {\n    try {\n        const res = await api.put(`/posts/unlike/${id}`);\n\n        dispatch({\n            type: UPDATE_LIKES,\n            payload: { id, likes: res.data }\n        });\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n// Delete post\nexport const deletePost = id => async dispatch => {\n    try {\n        await api.delete(`/posts/${id}`);\n\n        dispatch({\n            type: DELETE_POST,\n            payload: id\n        });\n\n        dispatch(setAlert('Post Removed', 'success'));\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n// Add post\nexport const addPost = formData => async dispatch => {\n    try {\n        const res = await api.post('/posts', formData);\n\n        dispatch({\n            type: ADD_POST,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Post Created', 'success'));\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n// Get post\nexport const getPost = id => async dispatch => {\n    try {\n        const res = await api.get(`/posts/${id}`);\n\n        dispatch({\n            type: GET_POST,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n// Add comment\nexport const addComment = (postId, formData) => async dispatch => {\n    try {\n        const res = await api.post(`/posts/comment/${postId}`, formData);\n\n        dispatch({\n            type: ADD_COMMENT,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Comment Added', 'success'));\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n// Delete comment\nexport const deleteComment = (postId, commentId) => async dispatch => {\n    try {\n        await api.delete(`/posts/comment/${postId}/${commentId}`);\n\n        dispatch({\n            type: REMOVE_COMMENT,\n            payload: commentId\n        });\n\n        dispatch(setAlert('Comment Removed', 'success'));\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import React,{Fragment}from'react';import Moment from'react-moment';import moment from'moment';import{connect}from'react-redux';import{deleteExperience}from'../../actions/profile';var Experience=function Experience(_ref){var experience=_ref.experience,deleteExperience=_ref.deleteExperience;var experiences=experience.map(function(exp){return/*#__PURE__*/React.createElement(\"tr\",{key:exp._id},/*#__PURE__*/React.createElement(\"td\",null,exp.company),/*#__PURE__*/React.createElement(\"td\",{className:\"hide-sm\"},exp.title),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(Moment,{format:\"YYYY/MM/DD\"},moment.utc(exp.from)),\" -\",' ',exp.to===null?' Now':/*#__PURE__*/React.createElement(Moment,{format:\"YYYY/MM/DD\"},moment.utc(exp.to))),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return deleteExperience(exp._id);},className:\"btn btn-danger\"},\"Delete\")));});return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"h2\",{className:\"my-2\"},\"Experience Credentials\"),/*#__PURE__*/React.createElement(\"table\",{className:\"table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Company\"),/*#__PURE__*/React.createElement(\"th\",{className:\"hide-sm\"},\"Title\"),/*#__PURE__*/React.createElement(\"th\",{className:\"hide-sm\"},\"Years\"),/*#__PURE__*/React.createElement(\"th\",null))),/*#__PURE__*/React.createElement(\"tbody\",null,experiences)));};export default connect(null,{deleteExperience:deleteExperience})(Experience);","map":{"version":3,"sources":["/Users/zhichengqian/Desktop/Project/ReactProject/MERN/mern/client/src/components/dashboard/Experience.js"],"names":["React","Fragment","Moment","moment","connect","deleteExperience","Experience","experience","experiences","map","exp","_id","company","title","utc","from","to"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,gBAAT,KAAiC,uBAAjC,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAAsC,IAAnCC,CAAAA,UAAmC,MAAnCA,UAAmC,CAAvBF,gBAAuB,MAAvBA,gBAAuB,CACrD,GAAMG,CAAAA,WAAW,CAAGD,UAAU,CAACE,GAAX,CAAe,SAAAC,GAAG,qBAClC,0BAAI,GAAG,CAAEA,GAAG,CAACC,GAAb,eACI,8BAAKD,GAAG,CAACE,OAAT,CADJ,cAEI,0BAAI,SAAS,CAAC,SAAd,EAAyBF,GAAG,CAACG,KAA7B,CAFJ,cAGI,2CACI,oBAAC,MAAD,EAAQ,MAAM,CAAC,YAAf,EAA6BV,MAAM,CAACW,GAAP,CAAWJ,GAAG,CAACK,IAAf,CAA7B,CADJ,MACkE,GADlE,CAEKL,GAAG,CAACM,EAAJ,GAAW,IAAX,CACG,MADH,cAGG,oBAAC,MAAD,EAAQ,MAAM,CAAC,YAAf,EAA6Bb,MAAM,CAACW,GAAP,CAAWJ,GAAG,CAACM,EAAf,CAA7B,CALR,CAHJ,cAWI,2CACI,8BACI,OAAO,CAAE,yBAAMX,CAAAA,gBAAgB,CAACK,GAAG,CAACC,GAAL,CAAtB,EADb,CAEI,SAAS,CAAC,gBAFd,WADJ,CAXJ,CADkC,EAAlB,CAApB,CAuBA,mBACI,oBAAC,QAAD,mBACI,0BAAI,SAAS,CAAC,MAAd,2BADJ,cAEI,6BAAO,SAAS,CAAC,OAAjB,eACI,8CACA,2CACI,wCADJ,cAEI,0BAAI,SAAS,CAAC,SAAd,UAFJ,cAGI,0BAAI,SAAS,CAAC,SAAd,UAHJ,cAII,8BAJJ,CADA,CADJ,cASI,iCAAQH,WAAR,CATJ,CAFJ,CADJ,CAgBH,CAxCD,CA+CA,cAAeJ,CAAAA,OAAO,CAClB,IADkB,CAElB,CAAEC,gBAAgB,CAAhBA,gBAAF,CAFkB,CAAP,CAGbC,UAHa,CAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { deleteExperience } from '../../actions/profile';\n\nconst Experience = ({ experience, deleteExperience }) => {\n    const experiences = experience.map(exp => (\n        <tr key={exp._id}>\n            <td>{exp.company}</td>\n            <td className=\"hide-sm\">{exp.title}</td>\n            <td>\n                <Moment format=\"YYYY/MM/DD\">{moment.utc(exp.from)}</Moment> -{' '}\n                {exp.to === null ? (\n                    ' Now'\n                ) : (\n                    <Moment format=\"YYYY/MM/DD\">{moment.utc(exp.to)}</Moment>\n                )}\n            </td>\n            <td>\n                <button\n                    onClick={() => deleteExperience(exp._id)}\n                    className=\"btn btn-danger\"\n                >\n                    Delete\n                </button>\n            </td>\n        </tr>\n    ));\n\n    return (\n        <Fragment>\n            <h2 className=\"my-2\">Experience Credentials</h2>\n            <table className=\"table\">\n                <thead>\n                <tr>\n                    <th>Company</th>\n                    <th className=\"hide-sm\">Title</th>\n                    <th className=\"hide-sm\">Years</th>\n                    <th />\n                </tr>\n                </thead>\n                <tbody>{experiences}</tbody>\n            </table>\n        </Fragment>\n    );\n};\n\nExperience.propTypes = {\n    experience: PropTypes.array.isRequired,\n    deleteExperience: PropTypes.func.isRequired\n};\n\nexport default connect(\n    null,\n    { deleteExperience }\n)(Experience);\n"]},"metadata":{},"sourceType":"module"}
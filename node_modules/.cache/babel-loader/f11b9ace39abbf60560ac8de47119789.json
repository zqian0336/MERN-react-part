{"ast":null,"code":"import React,{Fragment,useEffect}from'react';import{connect}from'react-redux';import Spinner from'../layout/Spinner';import ProfileItem from'./ProfileItem';import{getProfiles}from'../../actions/profile';var Profiles=function Profiles(_ref){var getProfiles=_ref.getProfiles,_ref$profile=_ref.profile,profiles=_ref$profile.profiles,loading=_ref$profile.loading;useEffect(function(){getProfiles();},[getProfiles]);return/*#__PURE__*/React.createElement(Fragment,null,loading?/*#__PURE__*/React.createElement(Spinner,null):/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"h1\",{className:\"large text-primary\"},\"Developers\"),/*#__PURE__*/React.createElement(\"p\",{className:\"lead\"},/*#__PURE__*/React.createElement(\"i\",{className:\"fab fa-connectdevelop\"}),\" Browse and connect with developers\"),/*#__PURE__*/React.createElement(\"div\",{className:\"profiles\"},profiles.length>0?profiles.map(function(profile){return/*#__PURE__*/React.createElement(ProfileItem,{key:profile._id,profile:profile});}):/*#__PURE__*/React.createElement(\"h4\",null,\"No profiles found...\"))));};var mapStateToProps=function mapStateToProps(state){return{profile:state.profile};};export default connect(mapStateToProps,{getProfiles:getProfiles})(Profiles);","map":{"version":3,"sources":["/Users/zhichengqian/Desktop/Project/ReactProject/MERN/mern/client/src/components/profiles/Profiles.js"],"names":["React","Fragment","useEffect","connect","Spinner","ProfileItem","getProfiles","Profiles","profile","profiles","loading","length","map","_id","mapStateToProps","state"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CAEA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,OAASC,WAAT,KAA4B,uBAA5B,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAqD,IAAlDD,CAAAA,WAAkD,MAAlDA,WAAkD,mBAArCE,OAAqC,CAA1BC,QAA0B,cAA1BA,QAA0B,CAAhBC,OAAgB,cAAhBA,OAAgB,CAClER,SAAS,CAAC,UAAM,CACZI,WAAW,GACd,CAFQ,CAEN,CAACA,WAAD,CAFM,CAAT,CAIA,mBACI,oBAAC,QAAD,MACKI,OAAO,cACJ,oBAAC,OAAD,MADI,cAGJ,oBAAC,QAAD,mBACI,0BAAI,SAAS,CAAC,oBAAd,eADJ,cAEI,yBAAG,SAAS,CAAC,MAAb,eACI,yBAAG,SAAS,CAAC,uBAAb,EADJ,uCAFJ,cAMI,2BAAK,SAAS,CAAC,UAAf,EACKD,QAAQ,CAACE,MAAT,CAAkB,CAAlB,CACGF,QAAQ,CAACG,GAAT,CAAa,SAAAJ,OAAO,qBAChB,oBAAC,WAAD,EAAa,GAAG,CAAEA,OAAO,CAACK,GAA1B,CAA+B,OAAO,CAAEL,OAAxC,EADgB,EAApB,CADH,cAKG,qDANR,CANJ,CAJR,CADJ,CAwBH,CA7BD,CAoCA,GAAMM,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAC9BP,OAAO,CAAEO,KAAK,CAACP,OADe,CAAL,EAA7B,CAIA,cAAeL,CAAAA,OAAO,CAClBW,eADkB,CAElB,CAAER,WAAW,CAAXA,WAAF,CAFkB,CAAP,CAGbC,QAHa,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport ProfileItem from './ProfileItem';\nimport { getProfiles } from '../../actions/profile';\n\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\n    useEffect(() => {\n        getProfiles();\n    }, [getProfiles]);\n\n    return (\n        <Fragment>\n            {loading ? (\n                <Spinner />\n            ) : (\n                <Fragment>\n                    <h1 className='large text-primary'>Developers</h1>\n                    <p className='lead'>\n                        <i className='fab fa-connectdevelop' /> Browse and connect with\n                        developers\n                    </p>\n                    <div className='profiles'>\n                        {profiles.length > 0 ? (\n                            profiles.map(profile => (\n                                <ProfileItem key={profile._id} profile={profile} />\n                            ))\n                        ) : (\n                            <h4>No profiles found...</h4>\n                        )}\n                    </div>\n                </Fragment>\n            )}\n        </Fragment>\n    );\n};\n\nProfiles.propTypes = {\n    getProfiles: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    profile: state.profile\n});\n\nexport default connect(\n    mapStateToProps,\n    { getProfiles }\n)(Profiles);\n"]},"metadata":{},"sourceType":"module"}
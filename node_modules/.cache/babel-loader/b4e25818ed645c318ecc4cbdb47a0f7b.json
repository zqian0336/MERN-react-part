{"ast":null,"code":"import api from '../utils/api';\nimport { setAlert } from './alert';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from './types'; // Load User\n\nexport const loadUser = () => async dispatch => {\n  try {\n    const res = await api.get('/auth');\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n}; // Register User\n\nexport const register = formData => async dispatch => {\n  try {\n    const res = await api.post('/users', formData);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n}; // Login User\n\nexport const login = (email, password) => async dispatch => {\n  const body = {\n    email,\n    password\n  };\n\n  try {\n    const res = await api.post('/auth', body);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n}; // Logout\n\nexport const logout = () => ({\n  type: LOGOUT\n});","map":{"version":3,"sources":["/Users/zhichengqian/Desktop/Project/ReactProject/MERN/mern/client/src/actions/auth.js"],"names":["api","setAlert","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","loadUser","dispatch","res","get","type","payload","data","err","register","formData","post","errors","response","forEach","error","msg","login","email","password","body","logout"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,cAAhB;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,SACIC,gBADJ,EAEIC,aAFJ,EAGIC,WAHJ,EAIIC,UAJJ,EAKIC,aALJ,EAMIC,UANJ,EAOIC,MAPJ,QAQO,SARP,C,CAUA;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAC5C,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMX,GAAG,CAACY,GAAJ,CAAQ,OAAR,CAAlB;AAEAF,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAET,WADD;AAELU,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAIH,GAPD,CAOE,OAAOC,GAAP,EAAY;AACVN,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAER;AADD,KAAD,CAAR;AAGH;AACJ,CAbM,C,CAeP;;AACA,OAAO,MAAMY,QAAQ,GAAGC,QAAQ,IAAI,MAAMR,QAAN,IAAkB;AAClD,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMX,GAAG,CAACmB,IAAJ,CAAS,QAAT,EAAmBD,QAAnB,CAAlB;AAEAR,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEX,gBADD;AAELY,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAIAL,IAAAA,QAAQ,CAACD,QAAQ,EAAT,CAAR;AACH,GARD,CAQE,OAAOO,GAAP,EAAY;AACV,UAAMI,MAAM,GAAGJ,GAAG,CAACK,QAAJ,CAAaN,IAAb,CAAkBK,MAAjC;;AAEA,QAAIA,MAAJ,EAAY;AACRA,MAAAA,MAAM,CAACE,OAAP,CAAeC,KAAK,IAAIb,QAAQ,CAACT,QAAQ,CAACsB,KAAK,CAACC,GAAP,EAAY,QAAZ,CAAT,CAAhC;AACH;;AAEDd,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEV;AADD,KAAD,CAAR;AAGH;AACJ,CApBM,C,CAsBP;;AACA,OAAO,MAAMsB,KAAK,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAMjB,QAAN,IAAkB;AACxD,QAAMkB,IAAI,GAAG;AAAEF,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAb;;AAEA,MAAI;AACA,UAAMhB,GAAG,GAAG,MAAMX,GAAG,CAACmB,IAAJ,CAAS,OAAT,EAAkBS,IAAlB,CAAlB;AAEAlB,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEP,aADD;AAELQ,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAKAL,IAAAA,QAAQ,CAACD,QAAQ,EAAT,CAAR;AACH,GATD,CASE,OAAOO,GAAP,EAAY;AACV,UAAMI,MAAM,GAAGJ,GAAG,CAACK,QAAJ,CAAaN,IAAb,CAAkBK,MAAjC;;AAEA,QAAIA,MAAJ,EAAY;AACRA,MAAAA,MAAM,CAACE,OAAP,CAAeC,KAAK,IAAIb,QAAQ,CAACT,QAAQ,CAACsB,KAAK,CAACC,GAAP,EAAY,QAAZ,CAAT,CAAhC;AACH;;AAEDd,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEN;AADD,KAAD,CAAR;AAGH;AACJ,CAvBM,C,CAyBP;;AACA,OAAO,MAAMsB,MAAM,GAAG,OAAO;AAAEhB,EAAAA,IAAI,EAAEL;AAAR,CAAP,CAAf","sourcesContent":["import api from '../utils/api';\nimport { setAlert } from './alert';\nimport {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    USER_LOADED,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT\n} from './types';\n\n// Load User\nexport const loadUser = () => async dispatch => {\n    try {\n        const res = await api.get('/auth');\n\n        dispatch({\n            type: USER_LOADED,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: AUTH_ERROR\n        });\n    }\n};\n\n// Register User\nexport const register = formData => async dispatch => {\n    try {\n        const res = await api.post('/users', formData);\n\n        dispatch({\n            type: REGISTER_SUCCESS,\n            payload: res.data\n        });\n        dispatch(loadUser());\n    } catch (err) {\n        const errors = err.response.data.errors;\n\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n\n        dispatch({\n            type: REGISTER_FAIL\n        });\n    }\n};\n\n// Login User\nexport const login = (email, password) => async dispatch => {\n    const body = { email, password };\n\n    try {\n        const res = await api.post('/auth', body);\n\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res.data\n        });\n\n        dispatch(loadUser());\n    } catch (err) {\n        const errors = err.response.data.errors;\n\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n\n        dispatch({\n            type: LOGIN_FAIL\n        });\n    }\n};\n\n// Logout\nexport const logout = () => ({ type: LOGOUT });\n"]},"metadata":{},"sourceType":"module"}
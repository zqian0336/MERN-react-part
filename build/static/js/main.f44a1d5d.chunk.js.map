{"version":3,"sources":["components/layout/spinner.gif","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/post.js","reducers/index.js","actions/types.js","utils/setAuthToken.js","store.js","utils/api.js","actions/alert.js","actions/auth.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/layout/Alert.js","components/dashboard/DashboardActions.js","actions/profile.js","components/dashboard/Experience.js","components/dashboard/Education.js","components/dashboard/Dashboard.js","components/profile-forms/ProfileForm.js","components/profile-forms/AddExperience.js","components/profile-forms/AddEducation.js","components/layout/Spinner.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/profile/ProfileTop.js","components/profile/ProfileAbout.js","components/profile/ProfileExperience.js","components/profile/ProfileEducation.js","components/profile/ProfileGithub.js","components/profile/Profile.js","components/posts/PostItem.js","actions/post.js","components/posts/PostForm.js","components/posts/Posts.js","components/post/CommentForm.js","components/post/CommentItem.js","components/post/Post.js","components/layout/NotFound.js","components/routing/PrivateRoute.js","components/routing/Routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","token","localStorage","getItem","isAuthenticated","loading","user","profile","profiles","repos","error","posts","post","combineReducers","alert","state","action","type","payload","filter","id","auth","_id","map","likes","comments","comment","setAuthToken","api","defaults","headers","common","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","currentState","getState","subscribe","previousState","axios","create","baseURL","interceptors","response","use","res","err","data","msg","dispatch","Promise","reject","setAlert","alertType","timeout","uuidv4","setTimeout","loadUser","a","get","connect","logout","authLinks","to","className","onClick","href","guestLinks","register","formData","errors","forEach","useState","name","email","password","password2","setFormData","onChange","e","target","value","onSubmit","preventDefault","placeholder","login","body","required","minLength","alerts","length","key","DashboardActions","getCurrentProfile","statusText","status","deleteExperience","delete","experience","experiences","exp","company","title","format","moment","utc","from","deleteEducation","education","educations","edu","school","degree","deleteAccount","window","confirm","useEffect","department","location","githubusername","bio","twitter","facebook","linkedin","youtube","instagram","createProfile","history","edit","push","displaySocialInputs","toggleSocialInputs","profileData","social","Array","isArray","skills","join","addExperience","put","current","description","checked","disabled","cols","rows","addEducation","institution","fieldofstudy","src","spinner","style","width","margin","display","alt","ProfileItem","avatar","slice","skill","index","getProfiles","Spinner","ProfileTop","rel","ProfileAbout","trim","split","ProfileExperience","ProfileEducation","getGithubRepos","username","repo","html_url","stargazers_count","watchers_count","forks_count","getProfileById","userId","match","params","PostItem","addLike","removeLike","deletePost","text","date","showActions","defaultProps","addPost","setText","getPosts","addComment","postId","deleteComment","commentId","getPost","NotFound","Component","component","rest","render","props","Routes","exact","path","Register","Login","Profiles","Profile","Dashboard","ProfileForm","AddExperience","AddEducation","Posts","Post","App","Landing","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.f44a1d5d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.efeed92d.gif\";","import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\n\nconst initialState = [];\n\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch (type) {\n        case SET_ALERT:\n            return [...state, payload];\n        case REMOVE_ALERT:\n            return state.filter(alert => alert.id !== payload);\n        default:\n            return state;\n    }\n}\n","import {\n    REGISTER_SUCCESS,\n    //REGISTER_FAIL,\n    USER_LOADED,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    //LOGIN_FAIL,\n    LOGOUT,\n    ACCOUNT_DELETED\n} from '../actions/types';\n\nconst initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    user: null\n};\n\nexport default function (state = initialState, action) {\n    const { type, payload } = action;\n\n    switch (type) {\n        case USER_LOADED:\n            return {\n                ...state,\n                isAuthenticated: true,\n                loading: false,\n                user: payload\n            };\n        case REGISTER_SUCCESS:\n            return {\n                ...state,\n                ...payload,\n                isAuthenticated: true,\n                loading: false\n            };\n        case LOGIN_SUCCESS:\n            return {\n                ...state,\n                ...payload,\n                isAuthenticated: true,\n                loading: false\n            };\n        case ACCOUNT_DELETED:\n            return {\n                ...state,\n                token: null,\n                isAuthenticated: false,\n                loading: false,\n                user: null\n            };\n        case AUTH_ERROR:\n        case LOGOUT:\n            return {\n                ...state,\n                token: null,\n                isAuthenticated: false,\n                loading: false,\n                user: null\n            };\n        default:\n            return state;\n    }\n}\n","import {\n    GET_PROFILE,\n    PROFILE_ERROR,\n    CLEAR_PROFILE,\n    UPDATE_PROFILE,\n    GET_PROFILES,\n    GET_REPOS,\n    NO_REPOS\n} from '../actions/types';\n\nconst initialState = {\n    profile: null,\n    profiles: [],\n    repos: [],\n    loading: true,\n    error: {}\n};\n\nexport default function (state = initialState, action) {\n    const { type, payload } = action;\n\n    switch (type) {\n        case GET_PROFILE:\n        case UPDATE_PROFILE:\n            return {\n                ...state,\n                profile: payload,\n                loading: false\n            };\n        case GET_PROFILES:\n            return {\n                ...state,\n                profiles: payload,\n                loading: false\n            };\n        case PROFILE_ERROR:\n            return {\n                ...state,\n                error: payload,\n                loading: false,\n                profile: null\n            };\n        case CLEAR_PROFILE:\n            return {\n                ...state,\n                profile: null,\n                repos: []\n            };\n        case GET_REPOS:\n            return {\n                ...state,\n                repos: payload,\n                loading: false\n            };\n        case NO_REPOS:\n            return {\n                ...state,\n                repos: []\n            };\n        default:\n            return state;\n    }\n}\n","import {\n    GET_POSTS,\n    POST_ERROR,\n    UPDATE_LIKES,\n    DELETE_POST,\n    ADD_POST,\n    GET_POST,\n    ADD_COMMENT,\n    REMOVE_COMMENT\n} from '../actions/types';\n\nconst initialState = {\n    posts: [],\n    post: null,\n    loading: true,\n    error: {}\n};\n\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch (type) {\n        case GET_POSTS:\n            return {\n                ...state,\n                posts: payload,\n                loading: false\n            };\n        case GET_POST:\n            return {\n                ...state,\n                post: payload,\n                loading: false\n            };\n        case ADD_POST:\n            return {\n                ...state,\n                posts: [payload, ...state.posts],\n                loading: false\n            };\n        case DELETE_POST:\n            return {\n                ...state,\n                posts: state.posts.filter(post => post._id !== payload),\n                loading: false\n            };\n        case POST_ERROR:\n            return {\n                ...state,\n                error: payload,\n                loading: false\n            };\n        case UPDATE_LIKES:\n            return {\n                ...state,\n                posts: state.posts.map(post =>\n                    post._id === payload.id ? { ...post, likes: payload.likes } : post\n                ),\n                loading: false\n            };\n        case ADD_COMMENT:\n            return {\n                ...state,\n                post: { ...state.post, comments: payload },\n                loading: false\n            };\n        case REMOVE_COMMENT:\n            return {\n                ...state,\n                post: {\n                    ...state.post,\n                    comments: state.post.comments.filter(\n                        comment => comment._id !== payload\n                    )\n                },\n                loading: false\n            };\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from 'redux';\nimport alert from './alert';\nimport auth from './auth';\nimport profile from './profile';\nimport post from './post';\n\nexport default combineReducers({\n    alert,\n    auth,\n    profile,\n    post\n});\n","export const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\nexport const USER_LOADED = 'USER_LOADED';\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT = 'LOGOUT';\nexport const GET_PROFILE = 'GET_PROFILE';\nexport const GET_PROFILES = 'GET_PROFILES';\nexport const GET_REPOS = 'GET_REPOS';\nexport const NO_REPOS = 'NO_REPOS';\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE';\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\nexport const ACCOUNT_DELETED = 'ACCOUNT_DELETED';\nexport const GET_POSTS = 'GET_POSTS';\nexport const GET_POST = 'GET_POST';\nexport const POST_ERROR = 'POST_ERROR';\nexport const UPDATE_LIKES = 'UPDATE_LIKES';\nexport const DELETE_POST = 'DELETE_POST';\nexport const ADD_POST = 'ADD_POST';\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const REMOVE_COMMENT = 'REMOVE_COMMENT';\n","import api from './api';\n\nconst setAuthToken = token => {\n    if (token) {\n        api.defaults.headers.common['x-auth-token'] = token;\n        localStorage.setItem('token', token);\n    } else {\n        delete api.defaults.headers.common['x-auth-token'];\n        localStorage.removeItem('token');\n    }\n};\n\nexport default setAuthToken;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport setAuthToken from './utils/setAuthToken';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\n// set up a store subscription listener\n// to store the users token in localStorage\n\n// initialize current state from redux store for subscription comparison\n// preventing undefined error\nlet currentState = store.getState();\n\nstore.subscribe(() => {\n    // keep track of the previous and current state to compare changes\n    let previousState = currentState;\n    currentState = store.getState();\n    // if the token changes set the value in localStorage and axios headers\n    if (previousState.auth.token !== currentState.auth.token) {\n        const token = currentState.auth.token;\n        setAuthToken(token);\n    }\n});\n\nexport default store;\n","import axios from 'axios';\nimport store from '../store';\nimport { LOGOUT } from '../actions/types';\n\nconst api = axios.create({\n    baseURL: '/api',\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n\n\napi.interceptors.response.use(\n    res => res,\n    err => {\n        if (err.response.data.msg === 'Token is not valid') {\n            store.dispatch({ type: LOGOUT });\n        }\n        return Promise.reject(err);\n    }\n);\n\nexport default api;\n","import { v4 as uuidv4 } from 'uuid';\nimport { SET_ALERT, REMOVE_ALERT } from './types';\n\nexport const setAlert = (msg, alertType, timeout = 5000) => dispatch => {\n    const id = uuidv4();\n    dispatch({\n        type: SET_ALERT,\n        payload: { msg, alertType, id }\n    });\n\n    setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\n};\n","import api from '../utils/api';\nimport { setAlert } from './alert';\nimport {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    USER_LOADED,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT\n} from './types';\n\n// Load User\nexport const loadUser = () => async dispatch => {\n    try {\n        const res = await api.get('/auth');\n\n        dispatch({\n            type: USER_LOADED,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: AUTH_ERROR\n        });\n    }\n};\n\n// Register User\nexport const register = formData => async dispatch => {\n    try {\n        const res = await api.post('/users', formData);\n\n        dispatch({\n            type: REGISTER_SUCCESS,\n            payload: res.data\n        });\n        dispatch(loadUser());\n    } catch (err) {\n        const errors = err.response.data.errors;\n\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n\n        dispatch({\n            type: REGISTER_FAIL\n        });\n    }\n};\n\n// Login User\nexport const login = (email, password) => async dispatch => {\n    const body = { email, password };\n\n    try {\n        const res = await api.post('/auth', body);\n\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res.data\n        });\n\n        dispatch(loadUser());\n    } catch (err) {\n        const errors = err.response.data.errors;\n\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n\n        dispatch({\n            type: LOGIN_FAIL\n        });\n    }\n};\n\n// Logout\nexport const logout = () => ({ type: LOGOUT });\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { logout } from '../../actions/auth';\n\nconst Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\n    const authLinks = (\n        <ul>\n            <li>\n                <Link to='/profiles'>Developers</Link>\n            </li>\n            <li>\n                <Link to='/posts'>Posts</Link>\n            </li>\n            <li>\n                <Link to='/dashboard'>\n                    <i className='fas fa-user' />{' '}\n                    <span className='hide-sm'>Dashboard</span>\n                </Link>\n            </li>\n            <li>\n                <a onClick={logout} href='#!'>\n                    <i className='fas fa-sign-out-alt' />{' '}\n                    <span className='hide-sm'>Logout</span>\n                </a>\n            </li>\n        </ul>\n    );\n\n    const guestLinks = (\n        <ul>\n            <li>\n                <Link to='/profiles'>Developers</Link>\n            </li>\n            <li>\n                <Link to='/register'>Register</Link>\n            </li>\n            <li>\n                <Link to='/login'>Login</Link>\n            </li>\n        </ul>\n    );\n\n    return (\n        <nav className='navbar bg-dark'>\n            <h1>\n                <Link to='/'>\n                    <i className='fas fa-code' /> DevConnector\n                </Link>\n            </h1>\n            {!loading && (\n                <Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>\n            )}\n        </nav>\n    );\n};\n\nNavbar.propTypes = {\n    logout: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(\n    mapStateToProps,\n    { logout }\n)(Navbar);\n","import React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst Landing = ({ isAuthenticated }) => {\n    if (isAuthenticated) {\n        return <Redirect to='/dashboard' />;\n    }\n\n    return (\n        <section className='landing'>\n            <div className='dark-overlay'>\n                <div className='landing-inner'>\n                    <h1 className='x-large'>Developer Connector</h1>\n                    <p className='lead'>\n                        Create a developer profile/portfolio, share posts and get help from\n                        other developers\n                    </p>\n                    <div className='buttons'>\n                        <Link to='/register' className='btn btn-primary'>\n                            Sign Up\n                        </Link>\n                        <Link to='/login' className='btn btn-light'>\n                            Login\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n};\n\nLanding.propTypes = {\n    isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps)(Landing);\n","import React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { setAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\nimport PropTypes from 'prop-types';\n\nconst Register = ({ setAlert, register, isAuthenticated }) => {\n    const [formData, setFormData] = useState({\n        name: '',\n        email: '',\n        password: '',\n        password2: ''\n    });\n\n    const { name, email, password, password2 } = formData;\n\n    const onChange = (e) =>\n        setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        if (password !== password2) {\n            setAlert('Passwords do not match', 'danger');\n        } else {\n            register({ name, email, password });\n        }\n    };\n\n    if (isAuthenticated) {\n        return <Redirect to=\"/dashboard\" />;\n    }\n\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">Sign Up</h1>\n            <p className=\"lead\">\n                <i className=\"fas fa-user\" /> Create Your Account\n            </p>\n            <form className=\"form\" onSubmit={onSubmit}>\n                <div className=\"form-group\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Name\"\n                        name=\"name\"\n                        value={name}\n                        onChange={onChange}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"email\"\n                        placeholder=\"Email Address\"\n                        name=\"email\"\n                        value={email}\n                        onChange={onChange}\n                    />\n                    <small className=\"form-text\">\n                        This site uses Gravatar so if you want a profile image, use a\n                        Gravatar email\n                    </small>\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        name=\"password\"\n                        value={password}\n                        onChange={onChange}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"password\"\n                        placeholder=\"Confirm Password\"\n                        name=\"password2\"\n                        value={password2}\n                        onChange={onChange}\n                    />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\n            </form>\n            <p className=\"my-1\">\n                Already have an account? <Link to=\"/login\">Sign In</Link>\n            </p>\n        </Fragment>\n    );\n};\n\nRegister.propTypes = {\n    setAlert: PropTypes.func.isRequired,\n    register: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { setAlert, register })(Register);\n","import React, { Fragment, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../../actions/auth';\n\nconst Login = ({ login, isAuthenticated }) => {\n    const [formData, setFormData] = useState({\n        email: '',\n        password: ''\n    });\n\n    const { email, password } = formData;\n\n    const onChange = (e) =>\n        setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        login(email, password);\n    };\n\n    if (isAuthenticated) {\n        return <Redirect to=\"/dashboard\" />;\n    }\n\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">Sign In</h1>\n            <p className=\"lead\">\n                <i className=\"fas fa-user\" /> Sign Into Your Account\n            </p>\n            <form className=\"form\" onSubmit={onSubmit}>\n                <div className=\"form-group\">\n                    <input\n                        type=\"email\"\n                        placeholder=\"Email Address\"\n                        name=\"email\"\n                        value={email}\n                        onChange={onChange}\n                        required\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        name=\"password\"\n                        value={password}\n                        onChange={onChange}\n                        minLength=\"6\"\n                    />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\" />\n            </form>\n            <p className=\"my-1\">\n                Don't have an account? <Link to=\"/register\">Sign Up</Link>\n            </p>\n        </Fragment>\n    );\n};\n\nLogin.propTypes = {\n    login: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst Alert = ({ alerts }) =>\n    alerts !== null &&\n    alerts.length > 0 &&\n    alerts.map(alert => (\n        <div key={alert.id} className={`alert alert-${alert.alertType}`}>\n            {alert.msg}\n        </div>\n    ));\n\nAlert.propTypes = {\n    alerts: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n    alerts: state.alert\n});\n\nexport default connect(mapStateToProps)(Alert);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst DashboardActions = () => {\n    return (\n        <div className='dash-buttons'>\n            <Link to='/edit-profile' className='btn btn-light'>\n                <i className='fas fa-user-circle text-primary' /> Edit Profile\n            </Link>\n            <Link to='/add-experience' className='btn btn-light'>\n                <i className='fab fa-black-tie text-primary' /> Add Experience\n            </Link>\n            <Link to='/add-education' className='btn btn-light'>\n                <i className='fas fa-graduation-cap text-primary' /> Add Education\n            </Link>\n        </div>\n    );\n};\n\nexport default DashboardActions;\n","import api from '../utils/api';\nimport { setAlert } from './alert';\n\nimport {\n    GET_PROFILE,\n    GET_PROFILES,\n    PROFILE_ERROR,\n    UPDATE_PROFILE,\n    CLEAR_PROFILE,\n    ACCOUNT_DELETED,\n    GET_REPOS,\n    NO_REPOS\n} from './types';\n\n// Get current users profile\nexport const getCurrentProfile = () => async dispatch => {\n    try {\n        const res = await api.get('/profile/me');\n\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n// Get all profiles\nexport const getProfiles = () => async dispatch => {\n    dispatch({ type: CLEAR_PROFILE });\n\n    try {\n        const res = await api.get('/profile');\n\n        dispatch({\n            type: GET_PROFILES,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n// Get profile by ID\nexport const getProfileById = userId => async dispatch => {\n    try {\n        const res = await api.get(`/profile/user/${userId}`);\n\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n// Get Github repos\nexport const getGithubRepos = username => async dispatch => {\n    try {\n        const res = await api.get(`/profile/github/${username}`);\n\n        dispatch({\n            type: GET_REPOS,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: NO_REPOS\n        });\n    }\n};\n\n// Create or update profile\nexport const createProfile = (\n    formData,\n    history,\n    edit = false\n) => async dispatch => {\n    try {\n        const res = await api.post('/profile', formData);\n\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        });\n\n        dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n        if (!edit) {\n            history.push('/dashboard');\n        }\n    } catch (err) {\n        const errors = err.response.data.errors;\n\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n// Add Experience\nexport const addExperience = (formData, history) => async dispatch => {\n    try {\n        const res = await api.put('/profile/experience', formData);\n\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Experience Added', 'success'));\n\n        history.push('/dashboard');\n    } catch (err) {\n        const errors = err.response.data.errors;\n\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n// Add Education\nexport const addEducation = (formData, history) => async dispatch => {\n    try {\n        const res = await api.put('/profile/education', formData);\n\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Education Added', 'success'));\n\n        history.push('/dashboard');\n    } catch (err) {\n        const errors = err.response.data.errors;\n\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n// Delete experience\nexport const deleteExperience = id => async dispatch => {\n    try {\n        const res = await api.delete(`/profile/experience/${id}`);\n\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Experience Removed', 'success'));\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n// Delete education\nexport const deleteEducation = id => async dispatch => {\n    try {\n        const res = await api.delete(`/profile/education/${id}`);\n\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Education Removed', 'success'));\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n// Delete account & profile\nexport const deleteAccount = () => async dispatch => {\n    if (window.confirm('Are you sure? This can NOT be undone!')) {\n        try {\n            await api.delete('/profile');\n\n            dispatch({ type: CLEAR_PROFILE });\n            dispatch({ type: ACCOUNT_DELETED });\n\n            dispatch(setAlert('Your account has been permanently deleted'));\n        } catch (err) {\n            dispatch({\n                type: PROFILE_ERROR,\n                payload: { msg: err.response.statusText, status: err.response.status }\n            });\n        }\n    }\n};\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { deleteExperience } from '../../actions/profile';\n\nconst Experience = ({ experience, deleteExperience }) => {\n    const experiences = experience.map(exp => (\n        <tr key={exp._id}>\n            <td>{exp.company}</td>\n            <td className=\"hide-sm\">{exp.title}</td>\n            <td>\n                <Moment format=\"YYYY/MM/DD\">{moment.utc(exp.from)}</Moment> -{' '}\n                {exp.to === null ? (\n                    ' Now'\n                ) : (\n                    <Moment format=\"YYYY/MM/DD\">{moment.utc(exp.to)}</Moment>\n                )}\n            </td>\n            <td>\n                <button\n                    onClick={() => deleteExperience(exp._id)}\n                    className=\"btn btn-danger\"\n                >\n                    Delete\n                </button>\n            </td>\n        </tr>\n    ));\n\n    return (\n        <Fragment>\n            <h2 className=\"my-2\">Experience Credentials</h2>\n            <table className=\"table\">\n                <thead>\n                <tr>\n                    <th>Company</th>\n                    <th className=\"hide-sm\">Title</th>\n                    <th className=\"hide-sm\">Years</th>\n                    <th />\n                </tr>\n                </thead>\n                <tbody>{experiences}</tbody>\n            </table>\n        </Fragment>\n    );\n};\n\nExperience.propTypes = {\n    experience: PropTypes.array.isRequired,\n    deleteExperience: PropTypes.func.isRequired\n};\n\nexport default connect(\n    null,\n    { deleteExperience }\n)(Experience);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { deleteEducation } from '../../actions/profile';\n\nconst Education = ({ education, deleteEducation }) => {\n    const educations = education.map(edu => (\n        <tr key={edu._id}>\n            <td>{edu.school}</td>\n            <td className=\"hide-sm\">{edu.degree}</td>\n            <td>\n                <Moment format=\"YYYY/MM/DD\">{moment.utc(edu.from)}</Moment> -{' '}\n                {edu.to === null ? (\n                    ' Now'\n                ) : (\n                    <Moment format=\"YYYY/MM/DD\">{moment.utc(edu.to)}</Moment>\n                )}\n            </td>\n            <td>\n                <button\n                    onClick={() => deleteEducation(edu._id)}\n                    className=\"btn btn-danger\"\n                >\n                    Delete\n                </button>\n            </td>\n        </tr>\n    ));\n\n    return (\n        <Fragment>\n            <h2 className=\"my-2\">Education Credentials</h2>\n            <table className=\"table\">\n                <thead>\n                <tr>\n                    <th>Institution</th>\n                    <th className=\"hide-sm\">Degree</th>\n                    <th className=\"hide-sm\">Years</th>\n                    <th />\n                </tr>\n                </thead>\n                <tbody>{educations}</tbody>\n            </table>\n        </Fragment>\n    );\n};\n\nEducation.propTypes = {\n    education: PropTypes.array.isRequired,\n    deleteEducation: PropTypes.func.isRequired\n};\n\nexport default connect(\n    null,\n    { deleteEducation }\n)(Education);\n","import React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport DashboardActions from './DashboardActions';\nimport Experience from './Experience';\nimport Education from './Education';\nimport { getCurrentProfile, deleteAccount } from '../../actions/profile';\n\nconst Dashboard = ({\n                       getCurrentProfile,\n                       deleteAccount,\n                       auth: { user },\n                       profile: { profile }\n                   }) => {\n    useEffect(() => {\n        getCurrentProfile();\n    }, [getCurrentProfile]);\n\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">Dashboard</h1>\n            <p className=\"lead\">\n                <i className=\"fas fa-user\" /> Welcome {user && user.name}\n            </p>\n            {profile !== null ? (\n                <Fragment>\n                    <DashboardActions />\n                    <Experience experience={profile.experience} />\n                    <Education education={profile.education} />\n\n                    <div className=\"my-2\">\n                        <button className=\"btn btn-danger\" onClick={() => deleteAccount()}>\n                            <i className=\"fas fa-user-minus\" /> Delete My Account\n                        </button>\n                    </div>\n                </Fragment>\n            ) : (\n                <Fragment>\n                    <p>You have not yet setup a profile, please add some info</p>\n                    <Link to=\"/create-profile\" className=\"btn btn-primary my-1\">\n                        Create Profile\n                    </Link>\n                </Fragment>\n            )}\n        </Fragment>\n    );\n};\n\nDashboard.propTypes = {\n    getCurrentProfile: PropTypes.func.isRequired,\n    deleteAccount: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    profile: state.profile\n});\n\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(\n    Dashboard\n);\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\n\nconst initialState = {\n    department: '',\n    location: '',\n    status: '',\n    githubusername: '',\n    bio: '',\n    twitter: '',\n    facebook: '',\n    linkedin: '',\n    youtube: '',\n    instagram: ''\n};\n\nconst ProfileForm = ({\n                         profile: { profile, loading },\n                         createProfile,\n                         getCurrentProfile,\n                         history\n                     }) => {\n    const [formData, setFormData] = useState(initialState);\n\n    const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n    useEffect(() => {\n        if (!profile) getCurrentProfile();\n        if (!loading && profile) {\n            const profileData = { ...initialState };\n            for (const key in profile) {\n                if (key in profileData) profileData[key] = profile[key];\n            }\n            for (const key in profile.social) {\n                if (key in profileData) profileData[key] = profile.social[key];\n            }\n            if (Array.isArray(profileData.skills))\n                profileData.skills = profileData.skills.join(', ');\n            setFormData(profileData);\n        }\n    }, [loading, getCurrentProfile, profile]);\n\n    const {\n        department,\n        location,\n        status,\n        githubusername,\n        bio,\n        twitter,\n        facebook,\n        linkedin,\n        youtube,\n        instagram\n    } = formData;\n\n    const onChange = e =>\n        setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n        createProfile(formData, history, profile ? true : false);\n    };\n\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">Edit Your Profile</h1>\n            <p className=\"lead\">\n                <i className=\"fas fa-user\" /> Add some changes to your profile\n            </p>\n            <small>* = required field</small>\n            <form className=\"form\" onSubmit={onSubmit}>\n                <div className=\"form-group\">\n                    <select name=\"status\" value={status} onChange={onChange}>\n                        <option>* Select Professional Status</option>\n                        <option value=\"Developer\">Developer</option>\n                        <option value=\"Junior Developer\">Junior Developer</option>\n                        <option value=\"Senior Developer\">Senior Developer</option>\n                        <option value=\"Manager\">Manager</option>\n                        <option value=\"Student or Learning\">Student or Learning</option>\n                        <option value=\"Instructor\">Instructor or Teacher</option>\n                        <option value=\"Intern\">Intern</option>\n                        <option value=\"Other\">Other</option>\n                    </select>\n                    <small className=\"form-text\">\n                        Give us an idea of where you are at in your career\n                    </small>\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Department\"\n                        name=\"department\"\n                        value={department}\n                        onChange={onChange}\n                    />\n\n                </div>\n\n                <div className=\"form-group\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Location\"\n                        name=\"location\"\n                        value={location}\n                        onChange={onChange}\n                    />\n                    <small className=\"form-text\">\n                        City & state suggested (eg. Boston, MA)\n                    </small>\n                </div>\n\n                <div className=\"form-group\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Github Username\"\n                        name=\"githubusername\"\n                        value={githubusername}\n                        onChange={onChange}\n                    />\n                    <small className=\"form-text\">\n                        If you want your latest repos and a Github link, include your\n                        username\n                    </small>\n                </div>\n                <div className=\"form-group\">\n          <textarea\n              placeholder=\"A short bio of yourself\"\n              name=\"bio\"\n              value={bio}\n              onChange={onChange}\n          />\n                    <small className=\"form-text\">Tell us a little about yourself</small>\n                </div>\n\n                <div className=\"my-2\">\n                    <button\n                        onClick={() => toggleSocialInputs(!displaySocialInputs)}\n                        type=\"button\"\n                        className=\"btn btn-light\"\n                    >\n                        Add Social Network Links\n                    </button>\n                    <span>Optional</span>\n                </div>\n\n                {displaySocialInputs && (\n                    <Fragment>\n                        <div className=\"form-group social-input\">\n                            <i className=\"fab fa-twitter fa-2x\" />\n                            <input\n                                type=\"text\"\n                                placeholder=\"Twitter URL\"\n                                name=\"twitter\"\n                                value={twitter}\n                                onChange={onChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group social-input\">\n                            <i className=\"fab fa-facebook fa-2x\" />\n                            <input\n                                type=\"text\"\n                                placeholder=\"Facebook URL\"\n                                name=\"facebook\"\n                                value={facebook}\n                                onChange={onChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group social-input\">\n                            <i className=\"fab fa-youtube fa-2x\" />\n                            <input\n                                type=\"text\"\n                                placeholder=\"YouTube URL\"\n                                name=\"youtube\"\n                                value={youtube}\n                                onChange={onChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group social-input\">\n                            <i className=\"fab fa-linkedin fa-2x\" />\n                            <input\n                                type=\"text\"\n                                placeholder=\"Linkedin URL\"\n                                name=\"linkedin\"\n                                value={linkedin}\n                                onChange={onChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group social-input\">\n                            <i className=\"fab fa-instagram fa-2x\" />\n                            <input\n                                type=\"text\"\n                                placeholder=\"Instagram URL\"\n                                name=\"instagram\"\n                                value={instagram}\n                                onChange={onChange}\n                            />\n                        </div>\n                    </Fragment>\n                )}\n\n                <input type=\"submit\" className=\"btn btn-primary my-1\" />\n                <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\n                    Go Back\n                </Link>\n            </form>\n        </Fragment>\n    );\n};\n\nProfileForm.propTypes = {\n    createProfile: PropTypes.func.isRequired,\n    getCurrentProfile: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    profile: state.profile\n});\n\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\n    ProfileForm\n);\n","import React, { Fragment, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addExperience } from '../../actions/profile';\n\nconst AddExperience = ({ addExperience, history }) => {\n    const [formData, setFormData] = useState({\n        company: '',\n        title: '',\n        location: '',\n        from: '',\n        to: '',\n        current: false,\n        description: ''\n    });\n\n    const { company, title, location, from, to, current, description } = formData;\n\n    const onChange = e =>\n        setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">Add An Experience</h1>\n            <p className=\"lead\">\n                <i className=\"fas fa-code-branch\" /> Add any developer/programming\n                positions that you have had in the past\n            </p>\n            <small>* = required field</small>\n            <form\n                className=\"form\"\n                onSubmit={e => {\n                    e.preventDefault();\n                    addExperience(formData, history);\n                }}\n            >\n                <div className=\"form-group\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"* Job Title\"\n                        name=\"title\"\n                        value={title}\n                        onChange={onChange}\n                        required\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"* Company\"\n                        name=\"company\"\n                        value={company}\n                        onChange={onChange}\n                        required\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Location\"\n                        name=\"location\"\n                        value={location}\n                        onChange={onChange}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <h4>From Date</h4>\n                    <input type=\"date\" name=\"from\" value={from} onChange={onChange} />\n                </div>\n                <div className=\"form-group\">\n                    <p>\n                        <input\n                            type=\"checkbox\"\n                            name=\"current\"\n                            checked={current}\n                            value={current}\n                            onChange={() => {\n                                setFormData({ ...formData, current: !current });\n                            }}\n                        />{' '}\n                        Current Job\n                    </p>\n                </div>\n                <div className=\"form-group\">\n                    <h4>To Date</h4>\n                    <input\n                        type=\"date\"\n                        name=\"to\"\n                        value={to}\n                        onChange={onChange}\n                        disabled={current}\n                    />\n                </div>\n                <div className=\"form-group\">\n          <textarea\n              name=\"description\"\n              cols=\"30\"\n              rows=\"5\"\n              placeholder=\"Job Description\"\n              value={description}\n              onChange={onChange}\n          />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary my-1\" />\n                <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\n                    Go Back\n                </Link>\n            </form>\n        </Fragment>\n    );\n};\n\nAddExperience.propTypes = {\n    addExperience: PropTypes.func.isRequired\n};\n\nexport default connect(null, { addExperience })(AddExperience);\n","import React, { Fragment, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addEducation } from '../../actions/profile';\n\nconst AddEducation = ({ addEducation, history }) => {\n    const [formData, setFormData] = useState({\n        institution: '',\n        degree: '',\n        fieldofstudy: '',\n        from: '',\n        to: '',\n        current: false,\n        description: ''\n    });\n\n    const {\n        institution,\n        degree,\n        fieldofstudy,\n        from,\n        to,\n        description,\n        current\n    } = formData;\n\n    const onChange = e =>\n        setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">Add Your Education</h1>\n            <p className=\"lead\">\n                <i className=\"fas fa-code-branch\" /> Add any school or bootcamp that you\n                have attended\n            </p>\n            <small>* = required field</small>\n            <form\n                className=\"form\"\n                onSubmit={e => {\n                    e.preventDefault();\n                    addEducation(formData, history);\n                }}\n            >\n                <div className=\"form-group\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"* Institution Name\"\n                        name=\"institution\"\n                        value={institution}\n                        onChange={onChange}\n                        required\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"* Degree or Certificate\"\n                        name=\"degree\"\n                        value={degree}\n                        onChange={onChange}\n                        required\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Field of Study\"\n                        name=\"fieldofstudy\"\n                        value={fieldofstudy}\n                        onChange={onChange}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <h4>From Date</h4>\n                    <input type=\"date\" name=\"from\" value={from} onChange={onChange} />\n                </div>\n                <div className=\"form-group\">\n                    <p>\n                        <input\n                            type=\"checkbox\"\n                            name=\"current\"\n                            checked={current}\n                            value={current}\n                            onChange={() =>\n                                setFormData({ ...formData, current: !formData.current })\n                            }\n                        />{' '}\n                        Current School\n                    </p>\n                </div>\n                <div className=\"form-group\">\n                    <h4>To Date</h4>\n                    <input\n                        type=\"date\"\n                        name=\"to\"\n                        value={to}\n                        onChange={onChange}\n                        disabled={current}\n                    />\n                </div>\n                <div className=\"form-group\">\n          <textarea\n              name=\"description\"\n              cols=\"30\"\n              rows=\"5\"\n              placeholder=\"Program Description\"\n              value={description}\n              onChange={onChange}\n          />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary my-1\" />\n                <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\n                    Go Back\n                </Link>\n            </form>\n        </Fragment>\n    );\n};\n\nAddEducation.propTypes = {\n    addEducation: PropTypes.func.isRequired\n};\n\nexport default connect(null, { addEducation })(AddEducation);\n","import React, { Fragment } from 'react';\nimport spinner from './spinner.gif';\n\nexport default () => (\n    <Fragment>\n        <img\n            src={spinner}\n            style={{ width: '200px', margin: 'auto', display: 'block' }}\n            alt='Loading...'\n        />\n    </Fragment>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst ProfileItem = ({\n                         profile: {\n                             user: { _id, name, avatar },\n                             status,\n                             company,\n                             location,\n                             skills\n                         }\n                     }) => {\n    return (\n        <div className='profile bg-light'>\n            <img src={avatar} alt='' className='round-img' />\n            <div>\n                <h2>{name}</h2>\n                <p>\n                    {status} {company && <span> at {company}</span>}\n                </p>\n                <p className='my-1'>{location && <span>{location}</span>}</p>\n                <Link to={`/profile/${_id}`} className='btn btn-primary'>\n                    View Profile\n                </Link>\n            </div>\n            <ul>\n                {skills.slice(0, 4).map((skill, index) => (\n                    <li key={index} className='text-primary'>\n                        <i className='fas fa-check' /> {skill}\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nProfileItem.propTypes = {\n    profile: PropTypes.object.isRequired\n};\n\nexport default ProfileItem;\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport ProfileItem from './ProfileItem';\nimport { getProfiles } from '../../actions/profile';\n\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\n    useEffect(() => {\n        getProfiles();\n    }, [getProfiles]);\n\n    return (\n        <Fragment>\n            {loading ? (\n                <Spinner />\n            ) : (\n                <Fragment>\n                    <h1 className='large text-primary'>Developers</h1>\n                    <p className='lead'>\n                        <i className='fab fa-connectdevelop' /> Browse and connect with\n                        developers\n                    </p>\n                    <div className='profiles'>\n                        {profiles.length > 0 ? (\n                            profiles.map(profile => (\n                                <ProfileItem key={profile._id} profile={profile} />\n                            ))\n                        ) : (\n                            <h4>No profiles found...</h4>\n                        )}\n                    </div>\n                </Fragment>\n            )}\n        </Fragment>\n    );\n};\n\nProfiles.propTypes = {\n    getProfiles: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    profile: state.profile\n});\n\nexport default connect(\n    mapStateToProps,\n    { getProfiles }\n)(Profiles);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ProfileTop = ({\n                        profile: {\n                            status,\n                            department,\n                            location,\n                            social,\n                            user: { name, avatar }\n                        }\n                    }) => {\n    return (\n        <div className='profile-top bg-primary p-2'>\n            <img className='round-img my-1' src={avatar} alt='' />\n            <h1 className='large'>{name}</h1>\n            <p className='lead'>\n                {status} {department && <span> at {department}</span>}\n            </p>\n            <p>{location && <span>{location}</span>}</p>\n            <div className='icons my-1'>\n                {social && social.twitter && (\n                    <a href={social.twitter} target='_blank' rel='noopener noreferrer'>\n                        <i className='fab fa-twitter fa-2x' />\n                    </a>\n                )}\n                {social && social.facebook && (\n                    <a href={social.facebook} target='_blank' rel='noopener noreferrer'>\n                        <i className='fab fa-facebook fa-2x' />\n                    </a>\n                )}\n                {social && social.linkedin && (\n                    <a href={social.linkedin} target='_blank' rel='noopener noreferrer'>\n                        <i className='fab fa-linkedin fa-2x' />\n                    </a>\n                )}\n                {social && social.youtube && (\n                    <a href={social.youtube} target='_blank' rel='noopener noreferrer'>\n                        <i className='fab fa-youtube fa-2x' />\n                    </a>\n                )}\n                {social && social.instagram && (\n                    <a href={social.instagram} target='_blank' rel='noopener noreferrer'>\n                        <i className='fab fa-instagram fa-2x' />\n                    </a>\n                )}\n            </div>\n        </div>\n    );\n};\n\nProfileTop.propTypes = {\n    profile: PropTypes.object.isRequired\n};\n\nexport default ProfileTop;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst ProfileAbout = ({\n                          profile: {\n                              bio,\n                              user: { name }\n                          }\n                      }) => (\n    <div className='profile-about bg-light p-2'>\n        {bio && (\n            <Fragment>\n                <h2 className='text-primary'>{name.trim().split(' ')[0]}s Bio</h2>\n                <p>{bio}</p>\n                <div className='line' />\n            </Fragment>\n        )}\n    </div>\n);\n\nProfileAbout.propTypes = {\n    profile: PropTypes.object.isRequired\n};\n\nexport default ProfileAbout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\nimport moment from 'moment';\n\nconst ProfileExperience = ({\n                               experience: { company, title, location, current, to, from, description }\n                           }) => (\n    <div>\n        <h3 className=\"text-dark\">{company}</h3>\n        <p>\n            <Moment format=\"YYYY/MM/DD\">{moment.utc(from)}</Moment> -{' '}\n            {!to ? ' Now' : <Moment format=\"YYYY/MM/DD\">{moment.utc(to)}</Moment>}\n        </p>\n        <p>\n            <strong>Position: </strong> {title}\n        </p>\n        <p>\n            <strong>Location: </strong> {location}\n        </p>\n        <p>\n            <strong>Description: </strong> {description}\n        </p>\n    </div>\n);\n\nProfileExperience.propTypes = {\n    experience: PropTypes.object.isRequired\n};\n\nexport default ProfileExperience;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\nimport moment from 'moment';\n\nconst ProfileEducation = ({\n                              education: { institution, degree, fieldofstudy, current, to, from, description }\n                          }) => (\n    <div>\n        <h3 className=\"text-dark\">{institution}</h3>\n        <p>\n            <Moment format=\"YYYY/MM/DD\">{moment.utc(from)}</Moment> -{' '}\n            {!to ? ' Now' : <Moment format=\"YYYY/MM/DD\">{moment.utc(to)}</Moment>}\n        </p>\n        <p>\n            <strong>Degree: </strong> {degree}\n        </p>\n        <p>\n            <strong>Field Of Study: </strong> {fieldofstudy}\n        </p>\n        <p>\n            <strong>Description: </strong> {description}\n        </p>\n    </div>\n);\n\nProfileEducation.propTypes = {\n    education: PropTypes.object.isRequired\n};\n\nexport default ProfileEducation;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getGithubRepos } from '../../actions/profile';\n\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\n    useEffect(() => {\n        getGithubRepos(username);\n    }, [getGithubRepos, username]);\n\n    return (\n        <div className=\"profile-github\">\n            <h2 className=\"text-primary my-1\">Github Repos</h2>\n            {repos.map(repo => (\n                <div key={repo.id} className=\"repo bg-white p-1 my-1\">\n                    <div>\n                        <h4>\n                            <a href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\n                                {repo.name}\n                            </a>\n                        </h4>\n                        <p>{repo.description}</p>\n                    </div>\n                    <div>\n                        <ul>\n                            <li className=\"badge badge-primary\">\n                                Stars: {repo.stargazers_count}\n                            </li>\n                            <li className=\"badge badge-dark\">\n                                Watchers: {repo.watchers_count}\n                            </li>\n                            <li className=\"badge badge-light\">Forks: {repo.forks_count}</li>\n                        </ul>\n                    </div>\n                </div>\n            ))}\n        </div>\n    );\n};\n\nProfileGithub.propTypes = {\n    getGithubRepos: PropTypes.func.isRequired,\n    repos: PropTypes.array.isRequired,\n    username: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n    repos: state.profile.repos\n});\n\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileExperience from './ProfileExperience';\nimport ProfileEducation from './ProfileEducation';\nimport ProfileGithub from './ProfileGithub';\nimport { getProfileById } from '../../actions/profile';\n\nconst Profile = ({ getProfileById, profile: { profile }, auth, match }) => {\n    useEffect(() => {\n        getProfileById(match.params.id);\n    }, [getProfileById, match.params.id]);\n\n    return (\n        <Fragment>\n            {profile === null ? (\n                <Spinner />\n            ) : (\n                <Fragment>\n                    <Link to=\"/profiles\" className=\"btn btn-light\">\n                        Back To Profiles\n                    </Link>\n                    {auth.isAuthenticated &&\n                    auth.loading === false &&\n                    auth.user._id === profile.user._id && (\n                        <Link to=\"/edit-profile\" className=\"btn btn-dark\">\n                            Edit Profile\n                        </Link>\n                    )}\n                    <div className=\"profile-grid my-1\">\n                        <ProfileTop profile={profile} />\n                        <ProfileAbout profile={profile} />\n                        <div className=\"profile-exp bg-white p-2\">\n                            <h2 className=\"text-primary\">Experience</h2>\n                            {profile.experience.length > 0 ? (\n                                <Fragment>\n                                    {profile.experience.map((experience) => (\n                                        <ProfileExperience\n                                            key={experience._id}\n                                            experience={experience}\n                                        />\n                                    ))}\n                                </Fragment>\n                            ) : (\n                                <h4>No experience credentials</h4>\n                            )}\n                        </div>\n\n                        <div className=\"profile-edu bg-white p-2\">\n                            <h2 className=\"text-primary\">Education</h2>\n                            {profile.education.length > 0 ? (\n                                <Fragment>\n                                    {profile.education.map((education) => (\n                                        <ProfileEducation\n                                            key={education._id}\n                                            education={education}\n                                        />\n                                    ))}\n                                </Fragment>\n                            ) : (\n                                <h4>No education credentials</h4>\n                            )}\n                        </div>\n\n                        {profile.githubusername && (\n                            <ProfileGithub username={profile.githubusername} />\n                        )}\n                    </div>\n                </Fragment>\n            )}\n        </Fragment>\n    );\n};\n\nProfile.propTypes = {\n    getProfileById: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n    profile: state.profile,\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps, { getProfileById })(Profile);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { addLike, removeLike, deletePost } from '../../actions/post';\n\nconst PostItem = ({\n                      addLike,\n                      removeLike,\n                      deletePost,\n                      auth,\n                      post: { _id, text, name, avatar, user, likes, comments, date },\n                      showActions\n                  }) => (\n    <div className='post bg-white p-1 my-1'>\n        <div>\n            <Link to={`/profile/${user}`}>\n                <img className='round-img' src={avatar} alt='' />\n                <h4>{name}</h4>\n            </Link>\n        </div>\n        <div>\n            <p className='my-1'>{text}</p>\n            <p className='post-date'>\n                Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\n            </p>\n\n            {showActions && (\n                <Fragment>\n                    <button\n                        onClick={() => addLike(_id)}\n                        type='button'\n                        className='btn btn-light'\n                    >\n                        <i className='fas fa-thumbs-up' />{' '}\n                        <span>{likes.length > 0 && <span>{likes.length}</span>}</span>\n                    </button>\n                    <button\n                        onClick={() => removeLike(_id)}\n                        type='button'\n                        className='btn btn-light'\n                    >\n                        <i className='fas fa-thumbs-down' />\n                    </button>\n                    <Link to={`/posts/${_id}`} className='btn btn-primary'>\n                        Discussion{' '}\n                        {comments.length > 0 && (\n                            <span className='comment-count'>{comments.length}</span>\n                        )}\n                    </Link>\n                    {!auth.loading && user === auth.user._id && (\n                        <button\n                            onClick={() => deletePost(_id)}\n                            type='button'\n                            className='btn btn-danger'\n                        >\n                            <i className='fas fa-times' />\n                        </button>\n                    )}\n                </Fragment>\n            )}\n        </div>\n    </div>\n);\n\nPostItem.defaultProps = {\n    showActions: true\n};\n\nPostItem.propTypes = {\n    post: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired,\n    addLike: PropTypes.func.isRequired,\n    removeLike: PropTypes.func.isRequired,\n    deletePost: PropTypes.func.isRequired,\n    showActions: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(\n    mapStateToProps,\n    { addLike, removeLike, deletePost }\n)(PostItem);\n","import api from '../utils/api';\nimport { setAlert } from './alert';\nimport {\n    GET_POSTS,\n    POST_ERROR,\n    UPDATE_LIKES,\n    DELETE_POST,\n    ADD_POST,\n    GET_POST,\n    ADD_COMMENT,\n    REMOVE_COMMENT\n} from './types';\n\n// Get posts\nexport const getPosts = () => async dispatch => {\n    try {\n        const res = await api.get('/posts');\n\n        dispatch({\n            type: GET_POSTS,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n// Add like\nexport const addLike = id => async dispatch => {\n    try {\n        const res = await api.put(`/posts/like/${id}`);\n\n        dispatch({\n            type: UPDATE_LIKES,\n            payload: { id, likes: res.data }\n        });\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n// Remove like\nexport const removeLike = id => async dispatch => {\n    try {\n        const res = await api.put(`/posts/unlike/${id}`);\n\n        dispatch({\n            type: UPDATE_LIKES,\n            payload: { id, likes: res.data }\n        });\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n// Delete post\nexport const deletePost = id => async dispatch => {\n    try {\n        await api.delete(`/posts/${id}`);\n\n        dispatch({\n            type: DELETE_POST,\n            payload: id\n        });\n\n        dispatch(setAlert('Post Removed', 'success'));\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n// Add post\nexport const addPost = formData => async dispatch => {\n    try {\n        const res = await api.post('/posts', formData);\n\n        dispatch({\n            type: ADD_POST,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Post Created', 'success'));\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n// Get post\nexport const getPost = id => async dispatch => {\n    try {\n        const res = await api.get(`/posts/${id}`);\n\n        dispatch({\n            type: GET_POST,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n// Add comment\nexport const addComment = (postId, formData) => async dispatch => {\n    try {\n        const res = await api.post(`/posts/comment/${postId}`, formData);\n\n        dispatch({\n            type: ADD_COMMENT,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Comment Added', 'success'));\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n// Delete comment\nexport const deleteComment = (postId, commentId) => async dispatch => {\n    try {\n        await api.delete(`/posts/comment/${postId}/${commentId}`);\n\n        dispatch({\n            type: REMOVE_COMMENT,\n            payload: commentId\n        });\n\n        dispatch(setAlert('Comment Removed', 'success'));\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addPost } from '../../actions/post';\n\nconst PostForm = ({ addPost }) => {\n    const [text, setText] = useState('');\n\n    return (\n        <div className='post-form'>\n            <div className='bg-primary p'>\n                <h3>Say Something...</h3>\n            </div>\n            <form\n                className='form my-1'\n                onSubmit={e => {\n                    e.preventDefault();\n                    addPost({ text });\n                    setText('');\n                }}\n            >\n        <textarea\n            name='text'\n            cols='30'\n            rows='5'\n            placeholder='Create a post'\n            value={text}\n            onChange={e => setText(e.target.value)}\n            required\n        />\n                <input type='submit' className='btn btn-dark my-1' value='Submit' />\n            </form>\n        </div>\n    );\n};\n\nPostForm.propTypes = {\n    addPost: PropTypes.func.isRequired\n};\n\nexport default connect(\n    null,\n    { addPost }\n)(PostForm);\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport PostItem from './PostItem';\nimport PostForm from './PostForm';\nimport { getPosts } from '../../actions/post';\n\nconst Posts = ({ getPosts, post: { posts } }) => {\n    useEffect(() => {\n        getPosts();\n    }, [getPosts]);\n\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">Posts</h1>\n            <p className=\"lead\">\n                <i className=\"fas fa-user\" /> Welcome to the community\n            </p>\n            <PostForm />\n            <div className=\"posts\">\n                {posts.map((post) => (\n                    <PostItem key={post._id} post={post} />\n                ))}\n            </div>\n        </Fragment>\n    );\n};\n\nPosts.propTypes = {\n    getPosts: PropTypes.func.isRequired,\n    post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n    post: state.post\n});\n\nexport default connect(mapStateToProps, { getPosts })(Posts);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addComment } from '../../actions/post';\n\nconst CommentForm = ({ postId, addComment }) => {\n    const [text, setText] = useState('');\n\n    return (\n        <div className='post-form'>\n            <div className='bg-primary p'>\n                <h3>Leave a Comment</h3>\n            </div>\n            <form\n                className='form my-1'\n                onSubmit={e => {\n                    e.preventDefault();\n                    addComment(postId, { text });\n                    setText('');\n                }}\n            >\n        <textarea\n            name='text'\n            cols='30'\n            rows='5'\n            placeholder='Comment the post'\n            value={text}\n            onChange={e => setText(e.target.value)}\n            required\n        />\n                <input type='submit' className='btn btn-dark my-1' value='Submit' />\n            </form>\n        </div>\n    );\n};\n\nCommentForm.propTypes = {\n    addComment: PropTypes.func.isRequired\n};\n\nexport default connect(\n    null,\n    { addComment }\n)(CommentForm);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Moment from 'react-moment';\nimport { deleteComment } from '../../actions/post';\n\nconst CommentItem = ({\n                         postId,\n                         comment: { _id, text, name, avatar, user, date },\n                         auth,\n                         deleteComment\n                     }) => (\n    <div className='post bg-white p-1 my-1'>\n        <div>\n            <Link to={`/profile/${user}`}>\n                <img className='round-img' src={avatar} alt='' />\n                <h4>{name}</h4>\n            </Link>\n        </div>\n        <div>\n            <p className='my-1'>{text}</p>\n            <p className='post-date'>\n                Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\n            </p>\n            {!auth.loading && user === auth.user._id && (\n                <button\n                    onClick={() => deleteComment(postId, _id)}\n                    type='button'\n                    className='btn btn-danger'\n                >\n                    <i className='fas fa-times' />\n                </button>\n            )}\n        </div>\n    </div>\n);\n\nCommentItem.propTypes = {\n    postId: PropTypes.string.isRequired,\n    comment: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired,\n    deleteComment: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(\n    mapStateToProps,\n    { deleteComment }\n)(CommentItem);\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport PostItem from '../posts/PostItem';\nimport CommentForm from '../post/CommentForm';\nimport CommentItem from '../post/CommentItem';\nimport { getPost } from '../../actions/post';\n\nconst Post = ({ getPost, post: { post, loading }, match }) => {\n    useEffect(() => {\n        getPost(match.params.id);\n    }, [getPost, match.params.id]);\n\n    return loading || post === null ? (\n        <Spinner />\n    ) : (\n        <Fragment>\n            <Link to=\"/posts\" className=\"btn\">\n                Back To Posts\n            </Link>\n            <PostItem post={post} showActions={false} />\n            <CommentForm postId={post._id} />\n            <div className=\"comments\">\n                {post.comments.map((comment) => (\n                    <CommentItem key={comment._id} comment={comment} postId={post._id} />\n                ))}\n            </div>\n        </Fragment>\n    );\n};\n\nPost.propTypes = {\n    getPost: PropTypes.func.isRequired,\n    post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n    post: state.post\n});\n\nexport default connect(mapStateToProps, { getPost })(Post);\n","import React, { Fragment } from 'react';\n\nconst NotFound = () => {\n    return (\n        <Fragment>\n            <h1 className='x-large text-primary'>\n                <i className='fas fa-exclamation-triangle' /> Page Not Found\n            </h1>\n            <p className='large'>Sorry, this page does not exist</p>\n        </Fragment>\n    );\n};\n\nexport default NotFound;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\n\nconst PrivateRoute = ({\n                          component: Component,\n                          auth: { isAuthenticated, loading },\n                          ...rest\n                      }) => (\n    <Route\n        {...rest}\n        render={props =>\n            loading ? (\n                <Spinner />\n            ) : isAuthenticated ? (\n                <Component {...props} />\n            ) : (\n                <Redirect to=\"/login\" />\n            )\n        }\n    />\n);\n\nPrivateRoute.propTypes = {\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Register from '../auth/Register';\nimport Login from '../auth/Login';\nimport Alert from '../layout/Alert';\nimport Dashboard from '../dashboard/Dashboard';\nimport ProfileForm from '../profile-forms/ProfileForm';\nimport AddExperience from '../profile-forms/AddExperience';\nimport AddEducation from '../profile-forms/AddEducation';\nimport Profiles from '../profiles/Profiles';\nimport Profile from '../profile/Profile';\nimport Posts from '../posts/Posts';\nimport Post from '../post/Post';\nimport NotFound from '../layout/NotFound';\nimport PrivateRoute from '../routing/PrivateRoute';\n\nconst Routes = props => {\n    return (\n        <section className=\"container\">\n            <Alert />\n            <Switch>\n                <Route exact path=\"/register\" component={Register} />\n                <Route exact path=\"/login\" component={Login} />\n                <Route exact path=\"/profiles\" component={Profiles} />\n                <Route exact path=\"/profile/:id\" component={Profile} />\n                <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n                <PrivateRoute exact path=\"/create-profile\" component={ProfileForm} />\n                <PrivateRoute exact path=\"/edit-profile\" component={ProfileForm} />\n                <PrivateRoute exact path=\"/add-experience\" component={AddExperience} />\n                <PrivateRoute exact path=\"/add-education\" component={AddEducation} />\n                <PrivateRoute exact path=\"/posts\" component={Posts} />\n                <PrivateRoute exact path=\"/posts/:id\" component={Post} />\n                <Route component={NotFound} />\n            </Switch>\n        </section>\n    );\n};\n\nexport default Routes;\n","import React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Landing from './components/layout/Landing';\nimport Routes from './components/routing/Routes';\n\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { loadUser } from './actions/auth';\nimport setAuthToken from './utils/setAuthToken';\n\nimport './App.css';\n\nconst App = () => {\n  useEffect(() => {\n    setAuthToken(localStorage.token);\n    store.dispatch(loadUser());\n  }, []);\n\n  return (\n      <Provider store={store}>\n        <Router>\n          <Fragment>\n            <Navbar />\n            <Switch>\n              <Route exact path=\"/\" component={Landing} />\n              <Route component={Routes} />\n            </Switch>\n          </Fragment>\n        </Router>\n      </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}